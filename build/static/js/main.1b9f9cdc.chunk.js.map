{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","utils/format.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","loading","transactions","payload","filter","transaction","_id","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","get","res","data","response","id","delete","config","headers","post","Provider","value","getTransactions","deleteTransaction","addTransaction","numberWithCommas","x","toString","replace","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","useEffect","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","parseInt","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b9f9cdc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n    )\r\n}\r\n","export default (state, action) => {\r\n    switch(action.type) {\r\n        case 'GET_TRANSACTIONS':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                transactions: action.payload\r\n            }\r\n        case 'DELETE_TRANSACTION':\r\n            return{\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            return{\r\n                ...state,\r\n                transactions: [...state.transactions, action.payload]\r\n            }\r\n        case 'TRANSACTION_ERROR':\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}","import React, {createContext, useReducer} from 'react';\r\nimport AppReducer from './AppReducer';\r\nimport axios from 'axios';\r\n\r\n//Initial Sptate\r\nconst initialState = {\r\n    transactions: [],\r\n    error: null,\r\n    loading: true\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//Provider component\r\nexport const GlobalProvider = ({children}) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    //Actions\r\n    async function getTransactions() {\r\n        try{\r\n            const res = await axios.get('/api/v1/transactions');\r\n\r\n            dispatch({\r\n                type: 'GET_TRANSACTIONS',\r\n                payload: res.data.data\r\n            });\r\n        }catch(err){\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            })\r\n        }\r\n    }\r\n\r\n    async function deleteTransaction(id) {\r\n        try{\r\n            await axios.delete(`/api/v1/transactions/${id}`);\r\n\r\n            dispatch({\r\n                type: 'DELETE_TRANSACTION',\r\n                payload: id\r\n            });\r\n        }catch(err){\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            });\r\n        }\r\n    };\r\n\r\n    async function addTransaction(transaction) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post('/api/v1/transactions', transaction, config);\r\n\r\n            dispatch({\r\n                type: 'ADD_TRANSACTION',\r\n                payload: res.data.data\r\n            });\r\n        }catch(err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n    return (<GlobalContext.Provider value={{\r\n        transactions:state.transactions,\r\n        error: state.error,\r\n        loading: state.loading,\r\n        getTransactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>);\r\n}","export function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n}","import React,{useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalState'\r\nimport { numberWithCommas } from '../utils/format';\r\n\r\nexport const Balance = () => {\r\n    const {transactions} = useContext(GlobalContext)\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1>${numberWithCommas(total)}</h1>\r\n        </>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalState'\r\nimport { numberWithCommas } from '../utils/format';\r\n\r\nexport const IncomeExpenses = () => {\r\n    const {transactions} = useContext(GlobalContext)\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const income = amounts\r\n        .filter(item => item > 0)\r\n        .reduce((acc, item) => (acc += item), 0)\r\n        .toFixed(2);\r\n\r\n    const expense = (\r\n        amounts.filter(item => item < 0)\r\n        .reduce((acc, item) => (acc += item), 0) * -1)\r\n        .toFixed(2);\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className=\"money plus\">${numberWithCommas(income)}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p className=\"money minus\">${numberWithCommas(expense)}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport { numberWithCommas } from '../utils/format';\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n\r\n    const {deleteTransaction} = useContext(GlobalContext)\r\n\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n    return (\r\n        <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n            {transaction.text} \r\n            <span>{sign}${numberWithCommas(Math.abs(transaction.amount))}</span>\r\n            <button onClick={() => deleteTransaction(transaction._id)} className=\"delete-btn\">x</button>\r\n        </li>\r\n    )\r\n}\r\n","import React, { useContext, useEffect } from 'react'\r\nimport  { GlobalContext, GlobalProvider } from '../context/GlobalState'\r\nimport { Transaction } from './Transaction'\r\n\r\n\r\nexport const TransactionList = () => {\r\n\r\n    const { transactions, getTransactions } = useContext(GlobalContext);\r\n\r\n    useEffect(() => {\r\n        getTransactions();\r\n        //eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n                {transactions.map(transaction => (\r\n                    <Transaction key={transaction.id} transaction={transaction}/>\r\n                ))}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useContext } from 'react'\r\nimport {GlobalContext} from '../context/GlobalState'\r\n\r\nexport const AddTransaction = () => {\r\n\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const {addTransaction} = useContext(GlobalContext)\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 1000000000),\r\n            text,\r\n            amount: parseInt(amount)\r\n        }\r\n        addTransaction(newTransaction);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\">\r\n                        Amount \r\n                        <br />\r\n                        (negative - expense, positive - income)\r\n                    </label>\r\n                    <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import './App.css';\nimport { Header } from './components/Header'\nimport { Balance } from './components/Balance'\nimport { IncomeExpenses } from './components/IncomeExpenses'\nimport { TransactionList } from './components/TransactionList'\nimport { AddTransaction } from './components/AddTransaction'\n\nimport {GlobalProvider} from './context/GlobalState'\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}